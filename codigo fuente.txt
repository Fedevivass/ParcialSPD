#include <Servo.h> 
Servo myServo;
// C++ code
//FEDERICO VIVAS DIV D PARCIAL
#define LED_ROJO 10
#define LED_VERDE 9
int pinFoto = A5;
int intencidad = 0;
////////////////////
int A = 6;
int B = 7;
int C = A0;
int D = A1;
int E = A2;
int F = 5;
int G = 4;

int t = 1000;
////////////////////
const int PULSADOR_SUBIR = 13;
const int PULSADOR_BAJAR = 12;
const int PULSADOR_DETENER = 11;
int estado_pulsador = 0;
int ultimo_estado = 0;
int suma_contador = 0;
///////////////////////////
int ultimo_estado_detener = 0;
int suma_contador_detener = 0;
int estado_pulsador_detener = 0;
///////////////////////////
int ultimo_estado_bajar = 0;
int suma_contador_bajar = 0;
int estado_pulsador_bajar = 0;
///////////////////////////
int ultimo_estado_subir = 0;
int suma_contador_subir = 0;
int estado_pulsador_subir = 0;
////////////////////
int contador = 0;
int total_pisos = 9;
void setup()
{
  myServo.attach(3,500,2500);
  pinMode(LED_ROJO, OUTPUT);
  pinMode(LED_VERDE, OUTPUT);
  pinMode(A, OUTPUT);
  pinMode(B, OUTPUT);
  pinMode(C, OUTPUT);
  pinMode(D, OUTPUT);
  pinMode(E, OUTPUT);
  pinMode(F, OUTPUT);
  pinMode(G, OUTPUT);
  pinMode(PULSADOR_SUBIR, INPUT);
  pinMode(PULSADOR_BAJAR, INPUT);
  pinMode(PULSADOR_DETENER, INPUT);
  pinMode(A5, INPUT);
  Serial.begin(9600);
}

void loop()
{
  	intencidad = analogRead(pinFoto);
  
  if(intencidad > 307){ 
  digitalWrite(LED_ROJO, HIGH); //Si hay luz ambiente prende el bombillo
  }else{
  digitalWrite(LED_ROJO, LOW); //Si no hay luz ambiente apaga el bombillo
  }
  	
  	subir_con_boton();
  	bajar_con_boton();
  	
}

////////////////////////////////////////////
void dibujar_numero()
{
	switch(contador)
      	{
          case 0:
  			Serial.println(contador);
          	cero();
      		break;      
          case 1:          
          	Serial.println(contador);
          	uno();
      		break;
          case 2:          
          	Serial.println(contador);
          	dos();
      		break;
          case 3:
          	Serial.println(contador);
          	tres();
       		break;   	
          case 4:
          	Serial.println(contador);
          	cuatro();
          	break;
          case 5:
          	Serial.println(contador);
          	cinco();
      		myServo.write(0);
            delay(1000);
            myServo.write(100);
            delay(1000);
          	break;
          case 6:
          	Serial.println(contador);
          	seis();
          	break;
          case 7:
          	Serial.println(contador);
          	siete();
          	break;
          case 8:
          	Serial.println(contador);
          	ocho();
          	break;
          case 9:
          	Serial.println(contador);
          	nueve();        	
          	break;
       	}
}

void subir_con_boton()
{
	estado_pulsador_subir = digitalRead(PULSADOR_SUBIR);
  if(estado_pulsador_subir != ultimo_estado_subir)	{
  	if(estado_pulsador_subir == HIGH)   {
    	
      	suma_contador_subir ++;
      	Serial.println("on");
      
      if (suma_contador_subir % 2 == 0) {
        subir();
      } else {
        digitalWrite(LED_VERDE, 0);
      }
    } else {
      
      Serial.println("off");
    }
    delay(150);
  }
  
  ultimo_estado_subir = estado_pulsador_subir;
}

void bajar_con_boton()
{
	estado_pulsador_bajar = digitalRead(PULSADOR_BAJAR);
  if(estado_pulsador_bajar != ultimo_estado_bajar)	{
  	if(estado_pulsador_bajar == HIGH)   {
    	
      	suma_contador_bajar ++;
      	Serial.println("on");
      
      if (suma_contador_bajar % 2 == 0) {
        bajar();
      } else {
        digitalWrite(LED_VERDE, 0);
      }
    } else {
      
      Serial.println("off");
    }
    delay(150);
  }
  
  ultimo_estado_bajar = estado_pulsador_bajar;
}
  

////////////////////////////////////////////
void chequeo_detener()
{
  estado_pulsador_detener = digitalRead(PULSADOR_DETENER);
  if (estado_pulsador_detener != ultimo_estado_detener)
    {
    digitalWrite(LED_ROJO,	HIGH);
  	digitalWrite(LED_VERDE, LOW);
    Serial.print("tocaron detener");
    }
}
void subir()
{
	chequeo_detener();
  	digitalWrite(LED_ROJO, LOW);  	
  	digitalWrite(LED_VERDE, HIGH);
  	while ( contador <= total_pisos && contador >= 0 && estado_pulsador_detener == false)
    {
     	chequeo_detener();
    	dibujar_numero();
      	contador ++;
    }
  	digitalWrite(LED_VERDE, LOW);
}

void bajar()
{
    chequeo_detener();
  	digitalWrite(LED_ROJO, LOW);
  	digitalWrite(LED_VERDE, HIGH);
  	contador --;
  	while ( contador <= total_pisos && contador >= 0 && estado_pulsador_detener == false)
    {
     chequeo_detener();
     dibujar_numero();
     contador --;    	       
    }
  	digitalWrite(LED_VERDE, LOW);
}

void cero()
{
	digitalWrite(A, 1);//0
  	digitalWrite(B, 1);
  	digitalWrite(C, 1);
  	digitalWrite(D, 1);
 	digitalWrite(E, 1);
  	digitalWrite(F, 1);
  	digitalWrite(G, 0);
  
  	delay(t);
}
  
void uno() 
{
	digitalWrite(A, 0);//1
  	digitalWrite(B, 1);
  	digitalWrite(C, 1);
  	digitalWrite(D, 0);
 	digitalWrite(E, 0);
  	digitalWrite(F, 0);
  	digitalWrite(G, 0);
  
  	delay(t);
}

void dos()
{
	digitalWrite(A, 1);//2
  	digitalWrite(B, 1);
  	digitalWrite(C, 0);
  	digitalWrite(D, 1);
 	digitalWrite(E, 1);
  	digitalWrite(F, 0);
  	digitalWrite(G, 1);
  
  	delay(t);
}

void tres()
{
	digitalWrite(A, 1);//3
  	digitalWrite(B, 1);
  	digitalWrite(C, 1);
  	digitalWrite(D, 1);
 	digitalWrite(E, 0);
  	digitalWrite(F, 0);
  	digitalWrite(G, 1);
  
  	delay(t);
}

void cuatro()
{
	digitalWrite(A, 0);//4
  	digitalWrite(B, 1);
  	digitalWrite(C, 1);
  	digitalWrite(D, 0);
 	digitalWrite(E, 0);
  	digitalWrite(F, 1);
  	digitalWrite(G, 1);
  
  	delay(t);
}

void cinco()
{
	digitalWrite(A, 1);//5
  	digitalWrite(B, 0);
  	digitalWrite(C, 1);
  	digitalWrite(D, 1);
 	digitalWrite(E, 0);
  	digitalWrite(F, 1);
  	digitalWrite(G, 1);
  
  	delay(t);
}

void seis()
{
	digitalWrite(A, 1);//6
  	digitalWrite(B, 0);
  	digitalWrite(C, 1);
  	digitalWrite(D, 1);
 	digitalWrite(E, 1);
  	digitalWrite(F, 1);
  	digitalWrite(G, 1);
  
  	delay(t);
}

void siete()
{
	digitalWrite(A, 1);//7
  	digitalWrite(B, 1);
  	digitalWrite(C, 1);
  	digitalWrite(D, 0);
 	digitalWrite(E, 0);
  	digitalWrite(F, 0);
  	digitalWrite(G, 0);
  
  	delay(t);
}

void ocho()
{
	digitalWrite(A, 1);//8
  	digitalWrite(B, 1);
  	digitalWrite(C, 1);
  	digitalWrite(D, 1);
 	digitalWrite(E, 1);
  	digitalWrite(F, 1);
  	digitalWrite(G, 1);
  
  	delay(t);
}
void nueve()
{
	digitalWrite(A, 1);//9
  	digitalWrite(B, 1);
  	digitalWrite(C, 1);
  	digitalWrite(D, 1);
 	digitalWrite(E, 0);
  	digitalWrite(F, 1);
  	digitalWrite(G, 1);
  
  	delay(t);
}
////////////////////////////////////////////
